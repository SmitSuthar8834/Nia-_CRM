# Generated by Django 4.2.7 on 2025-08-18 11:17

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CreatioConfiguration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('config_type', models.CharField(choices=[('api_endpoint', 'API Endpoint'), ('field_mapping', 'Field Mapping'), ('sync_schedule', 'Sync Schedule'), ('business_rule', 'Business Rule'), ('webhook', 'Webhook Configuration')], max_length=50)),
                ('config_key', models.CharField(max_length=100, unique=True)),
                ('config_value', models.JSONField()),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'creatio_configuration',
                'ordering': ['config_type', 'config_key'],
            },
        ),
        migrations.CreateModel(
            name='CreatioSync',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('entity_type', models.CharField(choices=[('lead', 'Lead'), ('contact', 'Contact'), ('account', 'Account'), ('opportunity', 'Opportunity'), ('activity', 'Activity'), ('meeting', 'Meeting'), ('task', 'Task')], max_length=50)),
                ('local_id', models.UUIDField(help_text='Local entity UUID')),
                ('creatio_id', models.CharField(blank=True, max_length=100, null=True)),
                ('sync_status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('success', 'Success'), ('failed', 'Failed'), ('conflict', 'Conflict'), ('manual_review', 'Manual Review Required')], default='pending', max_length=20)),
                ('sync_direction', models.CharField(choices=[('to_creatio', 'To Creatio'), ('from_creatio', 'From Creatio'), ('bidirectional', 'Bidirectional')], default='to_creatio', max_length=20)),
                ('last_sync', models.DateTimeField(blank=True, null=True)),
                ('next_sync', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('retry_count', models.IntegerField(default=0)),
                ('max_retries', models.IntegerField(default=3)),
                ('local_data_hash', models.CharField(blank=True, max_length=64, null=True)),
                ('creatio_data_hash', models.CharField(blank=True, max_length=64, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'creatio_sync',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='SyncLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('log_level', models.CharField(choices=[('debug', 'Debug'), ('info', 'Info'), ('warning', 'Warning'), ('error', 'Error'), ('critical', 'Critical')], max_length=20)),
                ('operation_type', models.CharField(choices=[('create', 'Create'), ('update', 'Update'), ('delete', 'Delete'), ('read', 'Read'), ('sync', 'Sync')], max_length=20)),
                ('message', models.TextField()),
                ('entity_type', models.CharField(blank=True, max_length=50, null=True)),
                ('entity_id', models.CharField(blank=True, max_length=100, null=True)),
                ('request_data', models.JSONField(blank=True, null=True)),
                ('response_data', models.JSONField(blank=True, null=True)),
                ('execution_time_ms', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sync_record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='crm_sync.creatiosync')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'sync_logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SyncConflict',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('conflict_type', models.CharField(choices=[('data_mismatch', 'Data Mismatch'), ('concurrent_update', 'Concurrent Update'), ('missing_dependency', 'Missing Dependency'), ('validation_error', 'Validation Error'), ('permission_denied', 'Permission Denied')], max_length=50)),
                ('field_name', models.CharField(blank=True, max_length=100, null=True)),
                ('local_value', models.JSONField(blank=True, null=True)),
                ('creatio_value', models.JSONField(blank=True, null=True)),
                ('resolution_status', models.CharField(choices=[('pending', 'Pending Resolution'), ('resolved_local', 'Resolved - Local Wins'), ('resolved_creatio', 'Resolved - Creatio Wins'), ('resolved_manual', 'Resolved - Manual Merge'), ('ignored', 'Ignored')], default='pending', max_length=20)),
                ('resolved_value', models.JSONField(blank=True, null=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('resolution_notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('sync_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conflicts', to='crm_sync.creatiosync')),
            ],
            options={
                'db_table': 'sync_conflicts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='creatiosync',
            index=models.Index(fields=['entity_type', 'sync_status'], name='creatio_syn_entity__b3765a_idx'),
        ),
        migrations.AddIndex(
            model_name='creatiosync',
            index=models.Index(fields=['creatio_id'], name='creatio_syn_creatio_1989c6_idx'),
        ),
        migrations.AddIndex(
            model_name='creatiosync',
            index=models.Index(fields=['sync_status', 'next_sync'], name='creatio_syn_sync_st_021246_idx'),
        ),
        migrations.AddIndex(
            model_name='creatiosync',
            index=models.Index(fields=['last_sync'], name='creatio_syn_last_sy_85f324_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='creatiosync',
            unique_together={('entity_type', 'local_id')},
        ),
        migrations.AddField(
            model_name='creatioconfiguration',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='synclog',
            index=models.Index(fields=['log_level', 'created_at'], name='sync_logs_log_lev_487791_idx'),
        ),
        migrations.AddIndex(
            model_name='synclog',
            index=models.Index(fields=['operation_type', 'created_at'], name='sync_logs_operati_578eca_idx'),
        ),
        migrations.AddIndex(
            model_name='synclog',
            index=models.Index(fields=['entity_type', 'created_at'], name='sync_logs_entity__3d3906_idx'),
        ),
        migrations.AddIndex(
            model_name='synclog',
            index=models.Index(fields=['sync_record'], name='sync_logs_sync_re_7e8e5e_idx'),
        ),
        migrations.AddIndex(
            model_name='syncconflict',
            index=models.Index(fields=['sync_record', 'resolution_status'], name='sync_confli_sync_re_6cdaba_idx'),
        ),
        migrations.AddIndex(
            model_name='syncconflict',
            index=models.Index(fields=['conflict_type'], name='sync_confli_conflic_9c67c1_idx'),
        ),
        migrations.AddIndex(
            model_name='syncconflict',
            index=models.Index(fields=['resolved_by'], name='sync_confli_resolve_a0ed45_idx'),
        ),
        migrations.AddIndex(
            model_name='creatioconfiguration',
            index=models.Index(fields=['config_type', 'is_active'], name='creatio_con_config__a9034a_idx'),
        ),
        migrations.AddIndex(
            model_name='creatioconfiguration',
            index=models.Index(fields=['config_key'], name='creatio_con_config__f9831c_idx'),
        ),
    ]
